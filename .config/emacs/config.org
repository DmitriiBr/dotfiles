#+TITLE: Emacs config
#+AUTHOR: DmitriiBr
#+DATE: 19-12-2024

* Emacs UI configuration

** Removing unneeded elements and features

#+begin_src emacs-lisp
  (scroll-bar-mode -1)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (desktop-save-mode 1)
  (column-number-mode 1)
  (show-paren-mode 1)
  (setq visible-bell nil)
  (global-display-line-numbers-mode -1)
#+end_src

** No backup files

#+begin_src emacs-lisp
  (setq inhibit-startup-screen t)
  (setq scroll-step 1)
  (setq make-backup-files nil)
  (setq auto-save-default nil)
  (setq create-lockfiles nil)
#+end_src

** Truncate lines like in normal editors

#+begin_src emacs-lisp
  (setq-default truncate-lines t)
  (setq-default gloabal-visual-mode t)
  (global-auto-revert-mode t) 
#+end_src

** Theme configuration

Tao theme is a monochrome theme.
Setting font and theme custom load path.

#+begin_src emacs-lisp
  (global-hl-line-mode 1) (add-to-list 'custom-theme-load-path "~/.emacs.d/etc/themes")
  (use-package tao-theme
    :ensure t
    :init
    (setq tao-theme-use-sepia nil)
    (setq tao-theme-use-boxes nil))
  (set-face-attribute 'default nil :font "Iosevka NF"  :height 190)
#+end_src

* Mood line

Using best mode-line theme

#+begin_src emacs-lisp
(use-package mood-line
  :ensure t
  :config
  (mood-line-mode)
  (setq mood-line-glyph-alist mood-line-glyphs-fira-code)
  (setq mood-line-format
        (mood-line-defformat
         :left
         (((mood-line-segment-buffer-status) . " ")
          ((mood-line-segment-buffer-name)   . ""))
         :right
         (((mood-line-segment-scroll)             . " ")
          ((mood-line-segment-cursor-position)    . "  ")))))
#+end_src

* Evil mode

Setting evil mode and cursor in insert state to bar with width of "3".

#+begin_src emacs-lisp
(use-package evil
  :ensure t
  :init
  :config
  (evil-mode 1))

(setq evil-insert-state-cursor '(bar . 3))
#+end_src

* Searching, Ido + Ivy modes

** Ido mode

Setting it by default and changing separator.

#+begin_src emacs-lisp
(ido-mode 1)
(ido-everywhere 1)
(setq ido-separator "\n")
#+end_src

** Ivy mode

*** Ivy and bindings

Ivy prescient mode is a package, that enables history in minibuffer.

#+begin_src emacs-lisp
(use-package ivy
  :ensure t
  :demand t
  :init
  :config
  (setq enable-recursive-minibuffers t)
  (setq ivy-use-virtual-buffers t)
  (setq ivy-count-format "%d/%d ")
  (ivy-mode +1)
  (ivy-prescient-mode +1))
#+end_src

*** Counsel

Search engine for Ivy.

#+begin_src emacs-lisp
(use-package counsel
  :ensure t
  :demand t
  :init
  :config (counsel-mode +1))
#+end_src

* 
